#!/usr/bin/env ruby

# ---
# bin/humidity_control -- Ruby "executable" for monitoring humidity sensors
# ---
# TODO:
# [ ] Daily info SMS update
# [ ] Phone call for alarm
# [ ] How to handle repeated alarming?
# ---
require_relative '../lib/humidity_control'

options = {}
OptionParser.new do |opts|
  opts.banner << 'Usage: humidity_control [options]'

  options[:format] = 'text'
  opts.on('-h', '--help', 'Display this screen') do
    puts opts
    exit
  end
end.parse!

config = Config.new
sensor = Sensor.new(config: config)

loop do
  message = "ESP32-FC37@#{config.url_sensor} = "
  begin
    reading = sensor.reading
  rescue StandardError => errormsg
    message << "Something went wrong!\n#{errormsg}\n"
    reading = 'unknown'
  end
  message << "Reading is #{reading}."
  LOGGER.info message
  Alert.new(message: message, level: :alarm, config: config) unless reading == 'dry'
  sleep 10
end
