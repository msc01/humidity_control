#!/usr/bin/env ruby

# ---
# bin/humidity_control -- Ruby "executable" for monitoring humidity sensors
# ---
require_relative '../lib/humidity_control'

options = {}
OptionParser.new do |opts|
  opts.banner << 'Usage: humidity_control [options]'

  options[:format] = 'text'
  opts.on('-h', '--help', 'Display this screen') do
    puts opts
    exit
  end
end.parse!

config = Config.new
sensor = Sensor.new(config: config)

loop do
  begin
    sensor.read
    message = "ESP32-#{sensor.type}@#{config.url_sensor} Uptime = #{sensor.uptime} â€“ "
  rescue StandardError => errormsg
    message << "\nSomething went wrong!\n#{errormsg}\n"
  end
  message << "Reading is #{sensor.reading}."
  LOGGER.info message
  Alert.new(message: message, level: :alarm, config: config) unless sensor.reading == 'dry'
  sleep 10
end
